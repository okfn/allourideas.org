= content_for :meta do
  <META NAME="ROBOTS" CONTENT="NOINDEX, NOFOLLOW">
  %meta{:property => 'og:title', :content => "#{h @question.name}"}
  -if @earl && !@earl.logo_file_name.nil?
    %meta{:property => 'og:image', :content => "#{request.protocol}#{request.host_with_port}" + image_path(@earl.logo.url)}
  
-@item_data, @item_ids = [], []
= render :partial => 'shared/header_vote', :locals => {:question => @question}

.tab-content.question-vote
  -if !session[:has_voted] && session[:welcome_msg]
    .row.welcome-message
      .span10.offset1
        .alert
          %a.close{:type => 'button', :"data-dismiss" => 'alert'} &times;
          %p= h(session[:welcome_msg])
    -session[:welcome_msg] = nil
  .row
    .span10.offset1
      %h2.vote-question= @question.consultation.name
  .row.votebox
    .span5.offset1
      = render(:partial => 'questions/idea', :locals => {:data => @left_choice_text, :side => "leftside", :choice_id => @left_choice_id})
    .span5
      = render(:partial => 'questions/idea', :locals => {:data => @right_choice_text, :side => "rightside", :choice_id => @right_choice_id})

  .row
    .span3.offset1
      -if @earl.flag_enabled?
        %p= link_to(t('vote.flag_as_inappropriate'), "#flag_inappropriate", :id => 'left_flag', :class=> 'flag_link', :"data-toggle" => 'modal')
      &nbsp;
    .span4.vote-count-span
      %p= render :partial => 'vote_idea_count', :locals => {:question => @question}
    .span3.flag-right
      -if @earl.flag_enabled?
        %p= link_to(t('vote.flag_as_inappropriate'), "#flag_inappropriate", :id => 'right_flag',:class => 'flag_link', :"data-toggle" => 'modal')
      &nbsp;

  .row
    .span4.offset4.cant-decide
      %p= link_to(t('vote.cant_decide'), "#cant_decide_options", :id => "cant_decide_btn", :"data-toggle" => 'modal', :class => "btn")
  .row.add-idea-row
    .span6.offset3
      .add_idea
        -if signed_in?
          = render :partial => 'items/form', :locals => {:the_ab_test_name => @ab_test_ideas_text_name}
        -else
          %p= link_to(t('vote.login_to_add_your_own_idea'), new_session_path(:callback => request.url))
        .tellmearea

#cant_decide_options.hide.modal.fade
  .modal-header
    %button.close{:"data-dismiss" => 'modal'} x
    %h2= t('vote.cant_decide_title')
  .modal-body
    .row
      .span6
        -cd_options= ['like_both', 'both_same', 'dont_know_both', 'dislike_both', 'dont_know_left', 'dont_know_right', 'other']
        .cd_options
          - cd_options.each_slice(2) do |choices|
            .row
              - choices.each do |choice|
                .span3
                  %p
                    %button.btn.btn-primary.btn-block{:class => choice, :'data-questionid' => @question.id, :"data-reason" => choice, :"data-dismiss" => 'modal'}
                      =t('vote.cd_'+choice)
                      - if choice == 'dont_know_left' 
                        .leftside
                          %em= h(@left_choice_text)
                      - elsif choice == 'dont_know_right'
                        .rightside
                          %em= h(@right_choice_text)

-if @earl.flag_enabled?
  #flag_inappropriate.hide.modal.fade
    .modal-body
      %form.form-horizontal
        .control-group
          %label.control-label= t('vote.please_explain_flag')
          .controls
            =text_area_tag 'inappropriate_reason', "", :class => 'input-xlarge', :rows => 3
    .modal-footer
      %a.btn{:"data-dismiss" => 'modal'}
        =t('user.close')
      %button.btn.btn-primary.flag_submit_button{:"data-question_id" => @question.id}
        =t('vote.submit')

-if @ab_show_average == "with_average"
  #average_votes{:style => 'display:none'}
    = "(average is #{@question.attributes['average_votes']})"

=hidden_field_tag 'prompt_id', @question.attributes['picked_prompt_id']
=hidden_field_tag 'appearance_lookup', @question.attributes['appearance_id']

=hidden_field_tag 'left_side_text', "blank_history"
=hidden_field_tag 'right_side_text', "blank_history"

-if params[:just_created]
  = render :partial => 'adwords_conversion'

-content_for :head do
  = javascript_include_tag 'jquery.corner', 'jquery.blockUI.js'


-content_for :view_javascript do
  $('.rounded').corner('5px');
  = "var SHOW_AVERAGE_VOTES = '#{@ab_show_average}';"
  -unless session[:has_voted]
    :plain
      $('.firsttime').fadeIn(2000)
      $('.firsttime, #close, .vote_cell').bind("click", function() {
        $(".firsttime").fadeOut(500);
      });
  =render :partial => 'vote_box_js' 
